% Team SHAF
% MATLAB port of rep detection and fatigue detection algorithms 

adcBits = 1024;

repCount = 0;
thresholdVoltage = 0;
maxVoltage = 0;
currentPeakVoltage = adcBits;
previousPeakVoltage = adcBits;
tempPercent = 0.0;
fatiguePercent = 0.17;
fatigueFlag = 0;

baseline = 0;

%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\Todd\Documents\GitHub\SHAF\Capstone\data\scope\bicep_isometric_7k_samples.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/04/20 08:10:36

%% Initialize variables.
filename = 'C:\Users\Todd\Documents\GitHub\SHAF\Capstone\data\scope\bicep_isometric_7k_samples.csv';
delimiter = ',';

%% Format string for each line of text:
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%*s%*s%*s%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
data = dataArray{:, 1};

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;

%% Detect reps and fatigue
for i = 1:numel(data)
    if data(i) > baseline
        if data(i) > maxVoltage
            maxVoltage = data(i);
        else
            continue
        end
    else
        if maxVoltage >= thresholdVoltage
            ++repCount;
            previousPeakVoltage = currentPeakVoltage;
            currentPeakVoltage = thresholdVoltage;
            tempPercent = 1 - (currentPeakVoltage/previousPeakVoltage);
            if tempPercent > fatiguePercent
                fatigueFlag = 1;
            end
        else
            continue
        end
    end
end
